Require Import Logic.Rel.R. 
Require Import Logic.Rel.Properties.

(* Equivalence relation generated by a given relation on Type a.                *)
Inductive Equiv (a:Type) (r:Rel a) : Rel a :=
| EquivBase : forall (x y:a), r x y -> Equiv a r x y
| EquivRefl : forall (x:a), Equiv a r x x
| EquivSym  : forall (x y:a), Equiv a r x y -> Equiv a r y x
| EquivTrans: forall (x y z:a), Equiv a r x y -> Equiv a r y z -> Equiv a r x z
.

Arguments Equiv      {a}.
Arguments EquivBase  {a}.
Arguments EquivRefl  {a}.
Arguments EquivSym   {a}.
Arguments EquivTrans {a}.

Lemma Equiv_reflexive : forall (a:Type) (r:Rel a), reflexive (Equiv r).
Proof.
    intros a r. unfold reflexive. intros x. apply EquivRefl.
Qed.

Lemma Equiv_symmetric : forall (a:Type) (r:Rel a), symmetric (Equiv r).
Proof.
    intros a r. unfold symmetric. intros x y H1. apply EquivSym. assumption.
Qed.



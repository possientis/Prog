remove eqDec (leqDec should suffice)
Normal/IsListOf
Normal/Equiv
Normal/Nub: define the notion for sets
Normal/Sort: define the notion for sets
Normal/Normal: establish a link with Utils.Normal.normal
Normal/Normal: check imports are really needed
conjecture: normal x = sort . nub . map normal . toList $ x
Core/Functional : we d like => y = y' but we can only have y == y': we need some notion of normal form for sets
Core/Replacement (use filterReplace)
add Core/Replacement to Makefile
axiom of choice?
axiom of infinity false ?
all ZF axioms covered?
extension to infinite set
new semantics in terms of variable r : set -> set -> Prop
proof system of each language
extension of language



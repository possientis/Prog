(******************************************************************************)
(*                       Definition of type 'set'                             *)
(******************************************************************************)

(* In a set theoretic framework, the inductive type 'set' defined below, is

 * the free algebra of type (0,{},U) and generated by the empty set. In other
 * words, it is the free algebra with empty generator on which exist three
 * operators 0 (nullary) , {} (unary) and U (binary). This algebra is meant
 * to provide the basis of a model for a subclass of the set theoretic 'finite 
 * sets'. Hence the inductive type 'set' below should probably be named 
 * 'finite-set' rather than 'set'.
 *
 * The nullary operator 0: () -> set denotes a particular element of the 
 * algebra, which represents the empty set and corresponds to the constructor 
 * 'Empty' below. The unary oprator {} : set -> set represents the creation 
 * of a single element set {x} from a set x, and corresponds to the constructor
 * 'Singleton' below. The binary operator U : set x set -> set represents the
 * creation of the union xUy of two sets x and y and corresponds to the 
 * constructor 'Union' below.
 *
 * Every x:set (an element of type 'set', an element of the algebra set) is
 * a syntactic expression involving 0, {} and U which isn't quite the same 
 * as the finite set it 'represents'. Many syntactic expressions represent the 
 * same set (e.g. 0 and 0U0) and the main initial challenge of this file will 
 * be to formally define the appropriate equivalence relation on set.
 *) 

Inductive set : Set := 
  | Empty     : set
  | Singleton : set -> set
  | Union     : set -> set -> set.




<?xml version="1.0" encoding="UTF-8"?>

<!-- attempting to mimic Maven project structure -->

<project name="lucene" default="archive" >

  <property name="project.name" value="lucene" />
  <property name="project.version" value="1.0" />
  <property name="source.main" location="src/main/java" />
  <property name="source.test" location="src/test/java" />
  <property name="target" location="target" />
  <property name="target.main" location="${target}/classes" />
  <property name="target.test" location="${target}/test-classes" />
  <property name="target.reports" location="${target}/reports" />
  <property name="target.html" location="${target.reports}/html" />
  <property name="target.dist" location="${target}" />
  <property name="target.dist.jar" location=
    "${target.dist}/${project.name}-${project.version}.jar" />
  <property name="target.debug" value="true" />

  <!-- classpath used for compiling code including test code -->
  <path id="compile.classpath">
    <pathelement location="${target.main}" />
    <pathelement location="/usr/share/java/junit4.jar" />
  </path>

  <!-- classpath used for running unit test code -->
  <path id="test.classpath">
    <pathelement location="${target.dist.jar}" />
    <pathelement location="${target.test}" />
  </path>


  <target name="init">
    <mkdir dir="${target.main}" />
    <mkdir dir="${target.test}" />
    <mkdir dir="${target.dist}" />
    <mkdir dir="${target.reports}" />
    <mkdir dir="${target.html}" />
  </target>

  <target name="compile" depends="init" description="Compiles the source code">
    <javac  srcdir="${source.main}" destdir="${target.main}" 
            includeAntRuntime="false" debug="${target.debug}" />
    <javac  srcdir="${source.test}" destdir="${target.test}" 
            includeAntRuntime="false" debug="${target.debug}">
      <classpath refid="compile.classpath" />
    </javac>
  </target>

  <target name="test" depends="compile" description="Runs unit testing code">
    <!-- printsummary can be "true", "false" but also "withOutAndErr" -->
    <junit haltonfailure="true" printsummary="true">
      <classpath refid="test.classpath" />
      <!-- gives detail on failure
      <formatter type="brief" usefile="false" /> 
      -->
      <!-- it is possible to write your own formatters -->
      <formatter type="xml" /> 
      <batchtest todir="${target.reports}">
        <fileset dir="${target.test}" includes="**/*Test.class" />
      </batchtest>
    </junit>
    <junitreport todir="${target.reports}">
      <fileset dir="${target.reports}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${target.html}" />
    </junitreport>
  </target>

  <target name="archive" depends="test" description="Creates the JAR file">
    <jar  destfile="${target.dist.jar}" basedir="${target.main}"/>
  </target> 


  <target name="clean" 
    depends="init" description="Removes the temporary directories used">
    <delete dir="target" />
  </target>



</project>

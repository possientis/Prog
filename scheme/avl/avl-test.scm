(load "avl.scm")

(define (avl-test)

  (define a (avl (lambda (x y) (< x y))))
  (define b (avl (lambda (x y) (> x y))))

  (display "avl: starting unit test\n")

  ;; insert min max
  ;; first insert
  ((a 'insert!) 1 10)
  ((b 'insert!) 1 10)
  (if (not (a 'check)) (display "avl: unit test 1 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 2 failing\n"))
  (if (not (= 1 (car (a 'min)))) (display "avl: unit test 3 failing\n"))
  (if (not (= 10 (cdr (a 'min)))) (display "avl: unit test 4 failing\n"))
  (if (not (= 1 (car (a 'max)))) (display "avl: unit test 5 failing\n"))
  (if (not (= 10 (cdr (a 'max)))) (display "avl: unit test 6 failing\n"))
  (if (not (= 1 (car (b 'min)))) (display "avl: unit test 7 failing\n"))
  (if (not (= 10 (cdr (b 'min)))) (display "avl: unit test 8 failing\n"))
  (if (not (= 1 (car (b 'max)))) (display "avl: unit test 9 failing\n"))
  (if (not (= 10 (cdr (b 'max)))) (display "avl: unit test 10 failing\n"))
  ;; second insert
  ((a 'insert!) 3 30)
  ((b 'insert!) 3 30)
  (if (not (a 'check)) (display "avl: unit test 11 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 12 failing\n"))
  (if (not (= 1 (car (a 'min)))) (display "avl: unit test 13 failing\n"))
  (if (not (= 10 (cdr (a 'min)))) (display "avl: unit test 14 failing\n"))
  (if (not (= 3 (car (a 'max)))) (display "avl: unit test 15 failing\n"))
  (if (not (= 30 (cdr (a 'max)))) (display "avl: unit test 16 failing\n"))
  (if (not (= 3 (car (b 'min)))) (display "avl: unit test 17 failing\n"))
  (if (not (= 30 (cdr (b 'min)))) (display "avl: unit test 18 failing\n"))
  (if (not (= 1 (car (b 'max)))) (display "avl: unit test 19 failing\n"))
  (if (not (= 10 (cdr (b 'max)))) (display "avl: unit test 20 failing\n"))
  ;; third insert
  ((a 'insert!) 2 20) ; no impact on min-max
  ((b 'insert!) 2 20) ; no impact on min-max
  (if (not (a 'check)) (display "avl: unit test 21 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 22 failing\n"))
  (if (not (= 1 (car (a 'min)))) (display "avl: unit test 23 failing\n"))
  (if (not (= 10 (cdr (a 'min)))) (display "avl: unit test 24 failing\n"))
  (if (not (= 3 (car (a 'max)))) (display "avl: unit test 25 failing\n"))
  (if (not (= 30 (cdr (a 'max)))) (display "avl: unit test 26 failing\n"))
  (if (not (= 3 (car (b 'min)))) (display "avl: unit test 27 failing\n"))
  (if (not (= 30 (cdr (b 'min)))) (display "avl: unit test 28 failing\n"))
  (if (not (= 1 (car (b 'max)))) (display "avl: unit test 29 failing\n"))
  (if (not (= 10 (cdr (b 'max)))) (display "avl: unit test 30 failing\n"))
  ;; fourth insert
  ((a 'insert!) -1 -10)
  ((b 'insert!) -1 -10)
  (if (not (a 'check)) (display "avl: unit test 31 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 32 failing\n"))
  (if (not (= -1 (car (a 'min)))) (display "avl: unit test 33 failing\n"))
  (if (not (= -10 (cdr (a 'min)))) (display "avl: unit test 34 failing\n"))
  (if (not (= 3 (car (a 'max)))) (display "avl: unit test 35 failing\n"))
  (if (not (= 30 (cdr (a 'max)))) (display "avl: unit test 36 failing\n"))
  (if (not (= 3 (car (b 'min)))) (display "avl: unit test 37 failing\n"))
  (if (not (= 30 (cdr (b 'min)))) (display "avl: unit test 38 failing\n"))
  (if (not (= -1 (car (b 'max)))) (display "avl: unit test 39 failing\n"))
  (if (not (= -10 (cdr (b 'max)))) (display "avl: unit test 40 failing\n"))
  ;; further inserts
  ((a 'insert!) -2 -20)
  ((b 'insert!) -2 -20)
  (if (not (a 'check)) (display "avl: unit test 40.1 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 40.2 failing\n"))
  ((a 'insert!) 0 0)
  ((b 'insert!) 0 0)
  (if (not (a 'check)) (display "avl: unit test 40.3 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 40.4 failing\n"))
  ((a 'insert!) 4 40)
  ((b 'insert!) 4 40)
  (if (not (a 'check)) (display "avl: unit test 41 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 42 failing\n"))
  (if (not (= -2 (car (a 'min)))) (display "avl: unit test 43 failing\n"))
  (if (not (= -20 (cdr (a 'min)))) (display "avl: unit test 44 failing\n"))
  (if (not (= 4 (car (a 'max)))) (display "avl: unit test 45 failing\n"))
  (if (not (= 40 (cdr (a 'max)))) (display "avl: unit test 46 failing\n"))
  (if (not (= 4 (car (b 'min)))) (display "avl: unit test 47 failing\n"))
  (if (not (= 40 (cdr (b 'min)))) (display "avl: unit test 48 failing\n"))
  (if (not (= -2 (car (b 'max)))) (display "avl: unit test 49 failing\n"))
  (if (not (= -20 (cdr (b 'max)))) (display "avl: unit test 50 failing\n"))
  ;; testing search
  ;; key 1
  (if (not (= 1 (car ((a 'find) 1)))) (display "avl: unit test 51 failing\n"))
  (if (not (= 10 (cdr ((a 'find) 1)))) (display "avl: unit test 52 failing\n"))
  (if (not (= 1 (car ((b 'find) 1)))) (display "avl: unit test 53 failing\n"))
  (if (not (= 10 (cdr ((b 'find) 1)))) (display "avl: unit test 54 failing\n"))
  ;; key -1
  (if (not (= -1 (car ((a 'find) -1)))) (display "avl: unit test 55 failing\n"))
  (if (not (= -10 (cdr ((a 'find) -1)))) (display "avl: unit test 56 failing\n"))
  (if (not (= -1 (car ((b 'find) -1)))) (display "avl: unit test 57 failing\n"))
  (if (not (= -10 (cdr ((b 'find) -1)))) (display "avl: unit test 58 failing\n"))
  ;; key -2
  (if (not (= -2 (car ((a 'find) -2)))) (display "avl: unit test 59 failing\n"))
  (if (not (= -20 (cdr ((a 'find) -2)))) (display "avl: unit test 60 failing\n"))
  (if (not (= -2 (car ((b 'find) -2)))) (display "avl: unit test 61 failing\n"))
  (if (not (= -20 (cdr ((b 'find) -2)))) (display "avl: unit test 62 failing\n"))
  ;; key 0
  (if (not (= 0 (car ((a 'find) 0)))) (display "avl: unit test 63 failing\n"))
  (if (not (= 0 (cdr ((a 'find) 0)))) (display "avl: unit test 64 failing\n"))
  (if (not (= 0 (car ((b 'find) 0)))) (display "avl: unit test 65 failing\n"))
  (if (not (= 0 (cdr ((b 'find) 0)))) (display "avl: unit test 66 failing\n"))
  ;; key 3
  (if (not (= 3 (car ((a 'find) 3)))) (display "avl: unit test 67 failing\n"))
  (if (not (= 30 (cdr ((a 'find) 3)))) (display "avl: unit test 68 failing\n"))
  (if (not (= 3 (car ((b 'find) 3)))) (display "avl: unit test 69 failing\n"))
  (if (not (= 30 (cdr ((b 'find) 3)))) (display "avl: unit test 70 failing\n"))
  ;; key 2
  (if (not (= 2 (car ((a 'find) 2)))) (display "avl: unit test 71 failing\n"))
  (if (not (= 20 (cdr ((a 'find) 2)))) (display "avl: unit test 72 failing\n"))
  (if (not (= 2 (car ((b 'find) 2)))) (display "avl: unit test 73 failing\n"))
  (if (not (= 20 (cdr ((b 'find) 2)))) (display "avl: unit test 74 failing\n"))
  ;; key 4
  (if (not (= 4 (car ((a 'find) 4)))) (display "avl: unit test 75 failing\n"))
  (if (not (= 40 (cdr ((a 'find) 4)))) (display "avl: unit test 76 failing\n"))
  (if (not (= 4 (car ((b 'find) 4)))) (display "avl: unit test 77 failing\n"))
  (if (not (= 40 (cdr ((b 'find) 4)))) (display "avl: unit test 78 failing\n"))
  ;; key 5 not present in tree
  (if (not (eq? #f ((a 'find) 5))) (display "avl: unit test 79 failing\n"))
  (if (not (eq? #f ((b 'find) 5))) (display "avl: unit test 80 failing\n"))
  ;; testing no side effect
  (if (not (a 'check)) (display "avl: unit test 81 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 82 failing\n"))
  ;; testing succ
  ;; -3
  (if (not (= -2 (car ((a 'succ) -3)))) (display "avl: unit test 83 failing\n"))
  (if (not (= -20 (cdr ((a 'succ) -3)))) (display "avl: unit test 84 failing\n"))
  (if (not (eq? #f ((b 'succ) -3))) (display "avl: unit test 85 failing\n"))
  ;; -2
  (if (not (= -1 (car ((a 'succ) -2)))) (display "avl: unit test 86 failing\n"))
  (if (not (= -10 (cdr ((a 'succ) -2)))) (display "avl: unit test 87 failing\n"))
  (if (not (eq? #f ((b 'succ) -2))) (display "avl: unit test 88 failing\n"))
  ;; -1.5
  (if (not (= -1 (car ((a 'succ) -1.5)))) (display "avl: unit test 89 failing\n"))
  (if (not (= -10 (cdr ((a 'succ) -1.5)))) (display "avl: unit test 90 failing\n"))
  (if (not (= -2 (car ((b 'succ) -1.5)))) (display "avl: unit test 91 failing\n"))
  (if (not (= -20 (cdr ((b 'succ) -1.5)))) (display "avl: unit test 92 failing\n"))
  ;; -1
  (if (not (= 0 (car ((a 'succ) -1)))) (display "avl: unit test 93 failing\n"))
  (if (not (= 0 (cdr ((a 'succ) -1)))) (display "avl: unit test 94 failing\n"))
  (if (not (= -2 (car ((b 'succ) -1)))) (display "avl: unit test 95 failing\n"))
  (if (not (= -20 (cdr ((b 'succ) -1)))) (display "avl: unit test 96 failing\n"))
  ;; -0.5
  (if (not (= 0 (car ((a 'succ) -0.5))))(display "avl: unit test 97 failing\n"))
  (if (not (= 0 (cdr ((a 'succ) -0.5))))(display "avl: unit test 98 failing\n"))
  (if (not (= -1 (car ((b 'succ) -0.5))))(display "avl: unit test 99 failing\n"))
  (if (not (= -10 (cdr ((b 'succ) -0.5))))(display "avl: unit test 100 failing\n"))
  ;; 0
  (if (not (= 1 (car ((a 'succ) 0))))(display "avl: unit test 101 failing\n"))
  (if (not (= 10 (cdr ((a 'succ) 0))))(display "avl: unit test 102 failing\n"))
  (if (not (= -1 (car ((b 'succ) 0))))(display "avl: unit test 103 failing\n"))
  (if (not (= -10 (cdr ((b 'succ) 0))))(display "avl: unit test 104 failing\n"))
  ;; 0.5
  (if (not (= 1 (car ((a 'succ) 0.5))))(display "avl: unit test 105 failing\n"))
  (if (not (= 10 (cdr ((a 'succ) 0.5))))(display "avl: unit test 106 failing\n"))
  (if (not (= 0 (car ((b 'succ) 0.5))))(display "avl: unit test 107 failing\n"))
  (if (not (= 0 (cdr ((b 'succ) 0.5))))(display "avl: unit test 108 failing\n"))
  ;; 1
  (if (not (= 2 (car ((a 'succ) 1))))(display "avl: unit test 109 failing\n"))
  (if (not (= 20 (cdr ((a 'succ) 1))))(display "avl: unit test 110 failing\n"))
  (if (not (= 0 (car ((b 'succ) 1))))(display "avl: unit test 111 failing\n"))
  (if (not (= 0 (cdr ((b 'succ) 1))))(display "avl: unit test 112 failing\n"))
  ;; 1.5
  (if (not (= 2 (car ((a 'succ) 1.5))))(display "avl: unit test 113 failing\n"))
  (if (not (= 20 (cdr ((a 'succ) 1.5))))(display "avl: unit test 114 failing\n"))
  (if (not (= 1 (car ((b 'succ) 1.5))))(display "avl: unit test 115 failing\n"))
  (if (not (= 10 (cdr ((b 'succ) 1.5))))(display "avl: unit test 116 failing\n"))
  ;; 2
  (if (not (= 3 (car ((a 'succ) 2))))(display "avl: unit test 117 failing\n"))
  (if (not (= 30 (cdr ((a 'succ) 2))))(display "avl: unit test 118 failing\n"))
  (if (not (= 1 (car ((b 'succ) 2))))(display "avl: unit test 119 failing\n"))
  (if (not (= 10 (cdr ((b 'succ) 2))))(display "avl: unit test 120 failing\n"))
  ;; 2.5
  (if (not (= 3 (car ((a 'succ) 2.5))))(display "avl: unit test 121 failing\n"))
  (if (not (= 30 (cdr ((a 'succ) 2.5))))(display "avl: unit test 122 failing\n"))
  (if (not (= 2 (car ((b 'succ) 2.5))))(display "avl: unit test 123 failing\n"))
  (if (not (= 20 (cdr ((b 'succ) 2.5))))(display "avl: unit test 124 failing\n"))
  ;; 3
  (if (not (= 4 (car ((a 'succ) 3))))(display "avl: unit test 125 failing\n"))
  (if (not (= 40 (cdr ((a 'succ) 3))))(display "avl: unit test 126 failing\n"))
  (if (not (= 2 (car ((b 'succ) 3))))(display "avl: unit test 127 failing\n"))
  (if (not (= 20 (cdr ((b 'succ) 3))))(display "avl: unit test 128 failing\n"))
  ;; 3.5
  (if (not (= 4 (car ((a 'succ) 3.5))))(display "avl: unit test 129 failing\n"))
  (if (not (= 40 (cdr ((a 'succ) 3.5))))(display "avl: unit test 130 failing\n"))
  (if (not (= 3 (car ((b 'succ) 3.5))))(display "avl: unit test 131 failing\n"))
  (if (not (= 30 (cdr ((b 'succ) 3.5))))(display "avl: unit test 132 failing\n"))
  ;; 4
  (if (not (eq? #f ((a 'succ) 4)))(display "avl: unit test 133 failing\n"))
  (if (not (= 3 (car ((b 'succ) 4))))(display "avl: unit test 134 failing\n"))
  (if (not (= 30 (cdr ((b 'succ) 4))))(display "avl: unit test 135 failing\n"))
  ;; 5
  (if (not (eq? #f ((a 'succ) 5)))(display "avl: unit test 136 failing\n"))
  (if (not (= 4 (car ((b 'succ) 5))))(display "avl: unit test 137 failing\n"))
  (if (not (= 40 (cdr ((b 'succ) 5))))(display "avl: unit test 138 failing\n"))
  ;; testing pred
  ;; -3
  (if (not (= -2 (car ((b 'pred) -3)))) (display "avl: unit test 139 failing\n"))
  (if (not (= -20 (cdr ((b 'pred) -3)))) (display "avl: unit test 140 failing\n"))
  (if (not (eq? #f ((a 'pred) -3))) (display "avl: unit test 141 failing\n"))
  ;; -2
  (if (not (= -1 (car ((b 'pred) -2)))) (display "avl: unit test 142 failing\n"))
  (if (not (= -10 (cdr ((b 'pred) -2)))) (display "avl: unit test 143 failing\n"))
  (if (not (eq? #f ((a 'pred) -2))) (display "avl: unit test 144 failing\n"))
  ;; -1.5
  (if (not (= -1 (car ((b 'pred) -1.5))))(display "avl: unit test 145 failing\n"))
  (if (not (= -10 (cdr ((b 'pred) -1.5))))(display "avl: unit test 146 failing\n"))
  (if (not (= -2 (car ((a 'pred) -1.5))))(display "avl: unit test 147 failing\n"))
  (if (not (= -20 (cdr ((a 'pred) -1.5))))(display "avl: unit test 148 failing\n"))
  ;; -1
  (if (not (= 0 (car ((b 'pred) -1))))(display "avl: unit test 149 failing\n"))
  (if (not (= 0 (cdr ((b 'pred) -1))))(display "avl: unit test 150 failing\n"))
  (if (not (= -2 (car ((a 'pred) -1))))(display "avl: unit test 151 failing\n"))
  (if (not (= -20 (cdr ((a 'pred) -1))))(display "avl: unit test 152 failing\n"))
  ;; -0.5
  (if (not (= 0 (car ((b 'pred) -0.5))))(display "avl: unit test 153 failing\n"))
  (if (not (= 0 (cdr ((b 'pred) -0.5))))(display "avl: unit test 154 failing\n"))
  (if (not (= -1 (car ((a 'pred) -0.5))))(display "avl: unit test 155 failing\n"))
  (if (not (= -10 (cdr ((a 'pred) -0.5))))(display "avl: unit test 156 failing\n"))
  ;; 0
  (if (not (= 1 (car ((b 'pred) 0))))(display "avl: unit test 157 failing\n"))
  (if (not (= 10 (cdr ((b 'pred) 0))))(display "avl: unit test 158 failing\n"))
  (if (not (= -1 (car ((a 'pred) 0))))(display "avl: unit test 159 failing\n"))
  (if (not (= -10 (cdr ((a 'pred) 0))))(display "avl: unit test 160 failing\n"))
  ;; 0.5
  (if (not (= 1 (car ((b 'pred) 0.5))))(display "avl: unit test 161 failing\n"))
  (if (not (= 10 (cdr ((b 'pred) 0.5))))(display "avl: unit test 162 failing\n"))
  (if (not (= 0 (car ((a 'pred) 0.5))))(display "avl: unit test 163 failing\n"))
  (if (not (= 0 (cdr ((a 'pred) 0.5))))(display "avl: unit test 164 failing\n"))
  ;; 1
  (if (not (= 2 (car ((b 'pred) 1))))(display "avl: unit test 165 failing\n"))
  (if (not (= 20 (cdr ((b 'pred) 1))))(display "avl: unit test 166 failing\n"))
  (if (not (= 0 (car ((a 'pred) 1))))(display "avl: unit test 167 failing\n"))
  (if (not (= 0 (cdr ((a 'pred) 1))))(display "avl: unit test 168 failing\n"))
  ;; 1.5
  (if (not (= 2 (car ((b 'pred) 1.5))))(display "avl: unit test 169 failing\n"))
  (if (not (= 20 (cdr ((b 'pred) 1.5))))(display "avl: unit test 170 failing\n"))
  (if (not (= 1 (car ((a 'pred) 1.5))))(display "avl: unit test 171 failing\n"))
  (if (not (= 10 (cdr ((a 'pred) 1.5))))(display "avl: unit test 172 failing\n"))
  ;; 2
  (if (not (= 3 (car ((b 'pred) 2))))(display "avl: unit test 173 failing\n"))
  (if (not (= 30 (cdr ((b 'pred) 2))))(display "avl: unit test 174 failing\n"))
  (if (not (= 1 (car ((a 'pred) 2))))(display "avl: unit test 175 failing\n"))
  (if (not (= 10 (cdr ((a 'pred) 2))))(display "avl: unit test 176 failing\n"))
  ;; 2.5
  (if (not (= 3 (car ((b 'pred) 2.5))))(display "avl: unit test 177 failing\n"))
  (if (not (= 30 (cdr ((b 'pred) 2.5))))(display "avl: unit test 178 failing\n"))
  (if (not (= 2 (car ((a 'pred) 2.5))))(display "avl: unit test 179 failing\n"))
  (if (not (= 20 (cdr ((a 'pred) 2.5))))(display "avl: unit test 180 failing\n"))
  ;; 3
  (if (not (= 4 (car ((b 'pred) 3))))(display "avl: unit test 181 failing\n"))
  (if (not (= 40 (cdr ((b 'pred) 3))))(display "avl: unit test 182 failing\n"))
  (if (not (= 2 (car ((a 'pred) 3))))(display "avl: unit test 183 failing\n"))
  (if (not (= 20 (cdr ((a 'pred) 3))))(display "avl: unit test 184 failing\n"))
  ;; 3.5
  (if (not (= 4 (car ((b 'pred) 3.5))))(display "avl: unit test 185 failing\n"))
  (if (not (= 40 (cdr ((b 'pred) 3.5))))(display "avl: unit test 186 failing\n"))
  (if (not (= 3 (car ((a 'pred) 3.5))))(display "avl: unit test 187 failing\n"))
  (if (not (= 30 (cdr ((a 'pred) 3.5))))(display "avl: unit test 188 failing\n"))
  ;; 4
  (if (not (eq? #f ((b 'pred) 4)))(display "avl: unit test 189 failing\n"))
  (if (not (= 3 (car ((a 'pred) 4))))(display "avl: unit test 190 failing\n"))
  (if (not (= 30 (cdr ((a 'pred) 4))))(display "avl: unit test 191 failing\n"))
  ;; 5
  (if (not (eq? #f ((b 'pred) 5)))(display "avl: unit test 192 failing\n"))
  (if (not (= 4 (car ((a 'pred) 5))))(display "avl: unit test 193 failing\n"))
  (if (not (= 40 (cdr ((a 'pred) 5))))(display "avl: unit test 194 failing\n"))
  ;; delete!
  ((a 'delete!) 5)  ; should have no impact
  ((b 'delete!) 5)
  (if (not (a 'check)) (display "avl: unit test 192 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 193 failing\n"))
  ;; deleting 0
  ((a 'delete!) 0)
  ((b 'delete!) 0)
  (if (not (a 'check)) (display "avl: unit test 194 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 195 failing\n"))
  (if (not (eq? #f ((a 'find) 0))) (display "avl: unit test 196 failing\n"))
  (if (not (eq? #f ((b 'find) 0))) (display "avl: unit test 197 failing\n"))
  (if (not (= -2 (car ((a 'find) -2))))(display "avl: unit test 198 failing\n"))
  (if (not (= -2 (car ((b 'find) -2))))(display "avl: unit test 199 failing\n"))
  (if (not (= -1 (car ((a 'find) -1))))(display "avl: unit test 200 failing\n"))
  (if (not (= -1 (car ((b 'find) -1))))(display "avl: unit test 201 failing\n"))
  (if (not (= 1 (car ((a 'find) 1))))(display "avl: unit test 202 failing\n"))
  (if (not (= 1 (car ((b 'find) 1))))(display "avl: unit test 203 failing\n"))
  (if (not (= 2 (car ((a 'find) 2))))(display "avl: unit test 204 failing\n"))
  (if (not (= 2 (car ((b 'find) 2))))(display "avl: unit test 205 failing\n"))
  (if (not (= 3 (car ((a 'find) 3))))(display "avl: unit test 206 failing\n"))
  (if (not (= 3 (car ((b 'find) 3))))(display "avl: unit test 207 failing\n"))
  (if (not (= 4 (car ((a 'find) 4))))(display "avl: unit test 208 failing\n"))
  (if (not (= 4 (car ((b 'find) 4))))(display "avl: unit test 209 failing\n"))
  ;; deleting 4
  ((a 'delete!) 4)
  ((b 'delete!) 4)
  (if (not (a 'check)) (display "avl: unit test 210 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 211 failing\n"))
  (if (not (eq? #f ((a 'find) 4))) (display "avl: unit test 212 failing\n"))
  (if (not (eq? #f ((b 'find) 4))) (display "avl: unit test 213 failing\n"))
  (if (not (= -2 (car ((a 'find) -2))))(display "avl: unit test 214 failing\n"))
  (if (not (= -2 (car ((b 'find) -2))))(display "avl: unit test 215 failing\n"))
  (if (not (= -1 (car ((a 'find) -1))))(display "avl: unit test 216 failing\n"))
  (if (not (= -1 (car ((b 'find) -1))))(display "avl: unit test 217 failing\n"))
  (if (not (= 1 (car ((a 'find) 1))))(display "avl: unit test 218 failing\n"))
  (if (not (= 1 (car ((b 'find) 1))))(display "avl: unit test 219 failing\n"))
  (if (not (= 2 (car ((a 'find) 2))))(display "avl: unit test 220 failing\n"))
  (if (not (= 2 (car ((b 'find) 2))))(display "avl: unit test 221 failing\n"))
  (if (not (= 3 (car ((a 'find) 3))))(display "avl: unit test 222 failing\n"))
  (if (not (= 3 (car ((b 'find) 3))))(display "avl: unit test 223 failing\n"))
  ;; deleting -2
  ((a 'delete!) -2)
  ((b 'delete!) -2)
  (if (not (a 'check)) (display "avl: unit test 224 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 225 failing\n"))
  (if (not (eq? #f ((a 'find) -2))) (display "avl: unit test 226 failing\n"))
  (if (not (eq? #f ((b 'find) -2))) (display "avl: unit test 227 failing\n"))
  (if (not (= -1 (car ((a 'find) -1))))(display "avl: unit test 228 failing\n"))
  (if (not (= -1 (car ((b 'find) -1))))(display "avl: unit test 229 failing\n"))
  (if (not (= 1 (car ((a 'find) 1))))(display "avl: unit test 230 failing\n"))
  (if (not (= 1 (car ((b 'find) 1))))(display "avl: unit test 231 failing\n"))
  (if (not (= 2 (car ((a 'find) 2))))(display "avl: unit test 232 failing\n"))
  (if (not (= 2 (car ((b 'find) 2))))(display "avl: unit test 233 failing\n"))
  (if (not (= 3 (car ((a 'find) 3))))(display "avl: unit test 234 failing\n"))
  (if (not (= 3 (car ((b 'find) 3))))(display "avl: unit test 235 failing\n"))
  ;; deleting 2
  ((a 'delete!) 2)
  ((b 'delete!) 2)
  (if (not (a 'check)) (display "avl: unit test 236 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 237 failing\n"))
  (if (not (eq? #f ((a 'find) 2))) (display "avl: unit test 238 failing\n"))
  (if (not (eq? #f ((b 'find) 2))) (display "avl: unit test 239 failing\n"))
  (if (not (= -1 (car ((a 'find) -1))))(display "avl: unit test 240 failing\n"))
  (if (not (= -1 (car ((b 'find) -1))))(display "avl: unit test 241 failing\n"))
  (if (not (= 1 (car ((a 'find) 1))))(display "avl: unit test 242 failing\n"))
  (if (not (= 1 (car ((b 'find) 1))))(display "avl: unit test 243 failing\n"))
  (if (not (= 3 (car ((a 'find) 3))))(display "avl: unit test 244 failing\n"))
  (if (not (= 3 (car ((b 'find) 3))))(display "avl: unit test 245 failing\n"))
  ;; deleting 1
  ((a 'delete!) 1)
  ((b 'delete!) 1)
  (if (not (a 'check)) (display "avl: unit test 246 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 247 failing\n"))
  (if (not (eq? #f ((a 'find) 1))) (display "avl: unit test 248 failing\n"))
  (if (not (eq? #f ((b 'find) 1))) (display "avl: unit test 249 failing\n"))
  (if (not (= -1 (car ((a 'find) -1))))(display "avl: unit test 250 failing\n"))
  (if (not (= -1 (car ((b 'find) -1))))(display "avl: unit test 251 failing\n"))
  (if (not (= 3 (car ((a 'find) 3))))(display "avl: unit test 252 failing\n"))
  (if (not (= 3 (car ((b 'find) 3))))(display "avl: unit test 253 failing\n"))
  ;; deleting -1
  ((a 'delete!) -1)
  ((b 'delete!) -1)
  (if (not (a 'check)) (display "avl: unit test 254 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 255 failing\n"))
  (if (not (eq? #f ((a 'find) -1))) (display "avl: unit test 256 failing\n"))
  (if (not (eq? #f ((b 'find) -1))) (display "avl: unit test 257 failing\n"))
  (if (not (= 3 (car ((a 'find) 3))))(display "avl: unit test 258 failing\n"))
  (if (not (= 3 (car ((b 'find) 3))))(display "avl: unit test 259 failing\n"))
  ;; deleting 3
  ((a 'delete!) 3)
  ((b 'delete!) 3)
  (if (not (a 'check)) (display "avl: unit test 260 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 261 failing\n"))
  (if (not (eq? #f ((a 'find) 3))) (display "avl: unit test 262 failing\n"))
  (if (not (eq? #f ((b 'find) 3))) (display "avl: unit test 263 failing\n"))
  ;; checking avl property more thoroughly
  ((a 'insert!) 1 10)
  ((b 'insert!) 1 10)
  (if (not (a 'check)) (display "avl: unit test 264 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 265 failing\n"))
  ((a 'insert!) 2 20)
  ((b 'insert!) 2 20)
  (if (not (a 'check)) (display "avl: unit test 266 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 267 failing\n"))
  ((a 'insert!) 3 30)
  ((b 'insert!) 3 30)
  (if (not (a 'check)) (display "avl: unit test 268 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 269 failing\n"))
  ((a 'insert!) 4 40)
  ((b 'insert!) 4 40)
  (if (not (a 'check)) (display "avl: unit test 270 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 271 failing\n"))
  ((a 'insert!) 5 50)
  ((b 'insert!) 5 50)
  (if (not (a 'check)) (display "avl: unit test 272 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 273 failing\n"))
  ((a 'insert!) 6 60)
  ((b 'insert!) 6 60)
  (if (not (a 'check)) (display "avl: unit test 274 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 275 failing\n"))
  ((a 'insert!) 7 70)
  ((b 'insert!) 7 70)
  (if (not (a 'check)) (display "avl: unit test 276 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 277 failing\n"))
  ((a 'insert!) 8 80)
  ((b 'insert!) 8 80)
  (if (not (a 'check)) (display "avl: unit test 278 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 279 failing\n"))
  ((a 'delete!) 5)
  ((b 'delete!) 5)
  (if (not (a 'check)) (display "avl: unit test 280 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 281 failing\n"))
  ((a 'delete!) 4)
  ((b 'delete!) 4)
  (if (not (a 'check)) (display "avl: unit test 282 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 283 failing\n"))
  ((a 'delete!) 7)
  ((b 'delete!) 7)
  (if (not (a 'check)) (display "avl: unit test 284 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 285 failing\n"))
  ((a 'insert!) 0 0)
  ((b 'insert!) 0 0)
  (if (not (a 'check)) (display "avl: unit test 286 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 287 failing\n"))
  ((a 'delete!) 6)
  ((b 'delete!) 6)
  (if (not (a 'check)) (display "avl: unit test 288 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 289 failing\n"))
  ((a 'delete!) 3)
  ((b 'delete!) 3)
  (if (not (a 'check)) (display "avl: unit test 290 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 291 failing\n"))
  ((a 'delete!) 8)
  ((b 'delete!) 8)
  (if (not (a 'check)) (display "avl: unit test 292 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 293 failing\n"))
  ((a 'delete!) 0)
  ((b 'delete!) 0)
  (if (not (a 'check)) (display "avl: unit test 294 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 295 failing\n"))
  ((a 'delete!) 1)
  ((b 'delete!) 1)
  (if (not (a 'check)) (display "avl: unit test 296 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 297 failing\n"))
  ((a 'delete!) 2)
  ((b 'delete!) 2)
  (if (not (a 'check)) (display "avl: unit test 298 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 299 failing\n"))
  ((a 'delete!) 1)  ; no impact
  ((b 'delete!) 1)  ; no impact
  (if (not (a 'check)) (display "avl: unit test 300 failing\n"))
  (if (not (b 'check)) (display "avl: unit test 301 failing\n"))


  (let loop ((i 255))
    (if (< i 1)
      'done
      (begin
        ((a 'insert!) i 0)
        ((b 'insert!) i 0)
        (if (not (a 'check)) (display "avl: unit test 302 failing\n"))
        (if (not (b 'check)) (display "avl: unit test 303 failing\n"))
        (set! i (- i 1))
        (loop i))))

  (let loop ((i 255))
    (if (< i 1)
      'done
      (begin
        ((a 'delete!) i)
        ((b 'delete!) i)
        (if (not (a 'check)) (display "avl: unit test 304 failing\n"))
        (if (not (b 'check)) (display "avl: unit test 305 failing\n"))
        (set! i (- i 1))
        (loop i))))

  (display "avl: unit test complete\n"))

(avl-test)
(exit 0)

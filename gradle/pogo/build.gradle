ext.versionFile = file('version.properties')

task loadVersion {  // task configuration (no 'doLast', 'doFirst')
  // task configurations always executed before task actions
  project.version = readVersion()
}


task printVersion {
  doLast {
    println("Version: ${version}")
  }
}

task makeReleaseVersion (
  group: 'versioning', 
  description: 'Make project a release version.') {
  doLast {
    version.release= true
    ant.propertyfile(file: versionFile) {
      entry(key: 'release', type: 'string', operation: '=', value: 'true')
    }
  }
}

class ProjectVersion {
  Integer major
  Integer minor
  Boolean release

  ProjectVersion(Integer major, Integer minor) {
    this.major = major
    this.minor = minor
    this.release = Boolean.FALSE
  }

  ProjectVersion(Integer major, Integer minor, Boolean release) {
    this(major, minor)
    this.release = release
  }

  @Override
  String toString() {
    "$major.$minor${release ? '' : '-SNAPSHOT'}"
  }
}

ProjectVersion readVersion() {
  logger.quiet 'Reading the version file.'

  if(!versionFile.exists()) {
    throw new GradleException(
      "Required version file does not exist: $versionFile.canonicalPath")
  }

  Properties versionProps = new Properties()

  versionFile.withInputStream { stream ->
    versionProps.load(stream)
  }
  
  new ProjectVersion (
    versionProps.major.toInteger(),
    versionProps.minor.toInteger(),
    versionProps.release.toBoolean()
  )
}




